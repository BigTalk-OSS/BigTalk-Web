{"version":3,"sources":["reportWebVitals.js","logo.svg","utils/GlobalEventListener.js","utils/EventTags.js","contract/ContractMetadata.js","utils/ShowNotification.js","web3js/ContractInterface.js","utils/Helper.js","utils/Intent.js","artifacts/TitleBar.js","screens/MainScreen.js","artifacts/AlertNotification.js","screens/TimeLine.js","screens/PostLoadingScreen.js","screens/SplashScreen.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalEventListener","eventType","handler","useEffect","window","addEventListener","removeEventListener","UpdateStatusEventTag","UpdateStatusPostLoad","UpdatePostIdFetchTag","CONTRACT_ADDRESS","CONTRACT_ABI","ShowNotification","holder","alertBar","unmountComponentAtNode","ReactDOM","render","a","ethereum","dispatchEvent","CustomEvent","detail","web3","Web3","enable","loadContract","contract","console","log","Promise","resolve","loadReadOnlyMode","currentProvider","providers","HttpProvider","alert","eth","Contract","methods","getPostBankIndex","call","postBankIndex","postBank","id","getPost","push","delay","ms","res","setTimeout","Intent","target","element","reject","TitleBar","className","src","logo","alt","MAIN_CONTEXT_ID","MainScreen","AlertNotification","props","theme","message","interval","state","visible","countdown","timeUntilDismissed","handleTimeChange","bind","clearInterval","setInterval","this","setState","open","React","Component","TimeLine","JSON","stringify","PostLoadingScreen","useState","postID","setPostID","status","setStatus","fetchingContainerVisibility","setVisibility","data","mainLoadingLottieOptions","loop","autoplay","animationData","loadingAnimation","rendererSettings","preserveAspectRatio","fetchingLottieOptions","fetchingAnimation","options","height","width","style","fontSize","visibility","animationIn","animationOut","duration","getPostsFromBlockChain","loadPosts","document","getElementById","SplashScreen","statusUpdateEvent","elementId","loadWeb3","success","catch","e","role","aria-valuenow","aria-valuemin","aria-valuemax","i"],"mappings":"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","file":"static/js/main.fdebe497.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect, useCallback} from 'react';\r\n\r\nexport default function GlobalEventListener(eventType, handler){\r\n    useEffect(() => {\r\n        window.addEventListener(eventType, handler);\r\n        return() => window.removeEventListener(eventType, handler);\r\n    },[eventType])\r\n}\r\n","export const UpdateStatusEventTag = \"STATUS_UPDATE\"\r\nexport const UpdateStatusPostLoad = \"POST_LOADING_STATUS\"\r\nexport const UpdatePostIdFetchTag = \"FETCHING_POST_ID\"\r\n","export const CONTRACT_ADDRESS = \"0x64B41be9be7fd21CEd2B46d9F7EB92ADde6E3eEe\"\r\nexport const CONTRACT_ABI = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"heading\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"body\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string[]\",\r\n                \"name\": \"media\",\r\n                \"type\": \"string[]\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"location\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string[]\",\r\n                \"name\": \"keywords\",\r\n                \"type\": \"string[]\"\r\n            }\r\n        ],\r\n        \"name\": \"addPost\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"postIndex\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"comment\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"media\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"postComment\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"success\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"_admin\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"_postBank\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_heading\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_body\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_location\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_timeStamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_author\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"_postBankIndex\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"a\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"b\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"compareStrings\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"pure\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"commentID\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getComment\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"author\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"body\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"media\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"timestamp\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"indexNumber\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getPost\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"heading\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"body\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string[]\",\r\n                \"name\": \"media\",\r\n                \"type\": \"string[]\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"location\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string[]\",\r\n                \"name\": \"keywords\",\r\n                \"type\": \"string[]\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"timestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"author\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getPostBankIndex\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256[]\",\r\n                \"name\": \"index\",\r\n                \"type\": \"uint256[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"postIndex\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getPostCommentsIndex\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256[]\",\r\n                \"name\": \"index\",\r\n                \"type\": \"uint256[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"postIndex\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"isPostExisting\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n","import {unmountComponentAtNode} from \"react-dom\";\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport default function ShowNotification(holder, alertBar){\r\n    unmountComponentAtNode(holder)\r\n    ReactDOM.render(alertBar, holder)\r\n}\r\n","import {UpdateStatusEventTag, UpdatePostIdFetchTag, UpdateStatusPostLoad} from \"../utils/EventTags\";\r\nimport Web3 from \"web3\";\r\nimport {CONTRACT_ABI, CONTRACT_ADDRESS} from \"../contract/ContractMetadata\";\r\nimport ShowAlertBar from \"../utils/ShowNotification\";\r\n\r\nexport default async function loadWeb3() {\r\n    if (window.ethereum) {\r\n        window.dispatchEvent(new CustomEvent(UpdateStatusEventTag, {detail: \"Waiting for approval\"}))\r\n        window.web3 = new Web3(window.ethereum);\r\n        try{\r\n            await window.ethereum.enable();\r\n            window.dispatchEvent(new CustomEvent(UpdateStatusEventTag, {detail: \"Loading contract\"}))\r\n            window.contract = await loadContract();\r\n            console.log(\"Contract loaded!\");\r\n            console.log(window.contract);\r\n            window.dispatchEvent(new CustomEvent(UpdateStatusEventTag, {detail: \"Done\"}))\r\n            return Promise.resolve(\"Done\");\r\n        }catch(e){\r\n            console.log(e);\r\n            window.dispatchEvent(new CustomEvent(UpdateStatusEventTag, {detail: \"Permission Denied\"}))\r\n            await loadReadOnlyMode()\r\n        }\r\n    }\r\n    else if(window.web3){\r\n        window.web3 = new Web3(window.web3.currentProvider);\r\n        window.dispatchEvent(new CustomEvent(UpdateStatusEventTag, {detail: \"Loading contract\"}))\r\n        window.contract = await loadContract();\r\n        console.log(\"Contract loaded!\");\r\n        console.log(window.contract);\r\n        window.dispatchEvent(new CustomEvent(UpdateStatusEventTag, {detail: \"Done\"}))\r\n        return Promise.resolve(\"Done\");\r\n    }\r\n    else{\r\n        await loadReadOnlyMode();\r\n        return Promise.resolve(\"Done\");\r\n    }\r\n}\r\n\r\nasync function loadReadOnlyMode(){\r\n    window.dispatchEvent(new CustomEvent(UpdateStatusEventTag, {detail: \"Connecting to node\"}))\r\n    window.web3 = await new Web3(new Web3.providers.HttpProvider(\"https://data-seed-prebsc-2-s1.binance.org:8545/\"));\r\n    window.dispatchEvent(new CustomEvent(UpdateStatusEventTag, {detail: \"Loading contract\"}))\r\n    window.contract = await loadContract();\r\n    window.dispatchEvent(new CustomEvent(UpdateStatusEventTag, {detail: \"Launching in read only mode\"}))\r\n    console.log(\"No web3 provider detected! Read only mode!\")\r\n    await alert(\"No web3 provider detected. You will only be able to read articles and can not comment or add new posts.\");\r\n    return Promise.resolve(\"Done\");\r\n}\r\n\r\nasync function loadContract(){\r\n    return await new window.web3.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);\r\n}\r\n\r\nexport async function loadPosts() {\r\n    window.dispatchEvent(new CustomEvent(UpdateStatusPostLoad, {detail: \"Loading index\"}))\r\n    window.postBankIndex = await window.contract.methods.getPostBankIndex().call();\r\n    window.dispatchEvent(new CustomEvent(UpdateStatusPostLoad, {detail: \"Loading posts\"}))\r\n    window.postBank = [];\r\n    for(let id of window.postBankIndex){\r\n        console.log(id);\r\n        window.dispatchEvent(new CustomEvent(UpdatePostIdFetchTag, {detail: id}))\r\n        window.postBank.push(await window.contract.methods.getPost(id).call());\r\n    }\r\n\r\n    console.log(window.postBankIndex);\r\n    console.log(window.postBank);\r\n\r\n    window.dispatchEvent(new CustomEvent(UpdateStatusEventTag, {detail: \"Done\"}))\r\n    return Promise.resolve(\"Done\");\r\n}\r\n\r\n","export const delay = ms => new Promise(res => setTimeout(res, ms));\r\n","import {unmountComponentAtNode} from \"react-dom\";\r\nimport ReactDOM from 'react-dom';\r\nimport React from 'react';\r\n\r\nexport default async function Intent(target, element){\r\n    try{\r\n        unmountComponentAtNode(target)\r\n        ReactDOM.render(element,target)\r\n        return Promise.resolve(true);\r\n    }catch(e){\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n","import logo from '../logo.svg'\r\nimport './style/TitleBar.css'\r\nexport default function TitleBar(){\r\n    return(\r\n        <div className={\"title-bar-container\"}>\r\n            <div className={\"branding-container\"}>\r\n                <img className={\"logo\"} src={logo} alt={\"app_logo\"}/>\r\n                <span className={\"name\"}><strong>Big Talk</strong></span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState, useEffect, useCallback} from 'react';\r\nimport TitleBar from \"../artifacts/TitleBar\";\r\nimport './style/MainScreen.css'\r\n\r\nexport const MAIN_CONTEXT_ID = 'main-context';\r\n\r\nexport default function MainScreen(){\r\n\r\n    return(\r\n        <div id={\"main-container\"}>\r\n            <TitleBar id={\"main-title-bar\"}/>\r\n            <div id={MAIN_CONTEXT_ID}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Alert } from \"shards-react\";\r\n\r\nexport default class AlertNotification extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.theme = props.theme\r\n        this.message = props.message\r\n        this.interval = null;\r\n        this.state = {\r\n            visible: true,\r\n            countdown: 0,\r\n            timeUntilDismissed: 5\r\n        };\r\n\r\n        this.handleTimeChange = this.handleTimeChange.bind(this);\r\n        this.clearInterval = this.clearInterval.bind(this);\r\n\r\n        this.clearInterval();\r\n        this.interval = setInterval(this.handleTimeChange, 1000);\r\n    }\r\n\r\n    handleTimeChange() {\r\n        if (this.state.countdown < this.state.timeUntilDismissed - 1) {\r\n            this.setState({\r\n                ...this.state,\r\n                ...{ countdown: this.state.countdown + 1 }\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.setState({ ...this.state, ...{ visible: false } });\r\n        this.clearInterval();\r\n    }\r\n\r\n    clearInterval() {\r\n        clearInterval(this.interval);\r\n        this.interval = null;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Alert className=\"mb-3\" open={this.state.visible} theme={this.theme}>\r\n                    <span>{this.message}</span>\r\n                </Alert>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export default function TimeLine(){\r\n    return (\r\n        <div>\r\n            {JSON.stringify(window.postBank)}\r\n        </div>\r\n    );\r\n}\r\n","import Lottie from 'react-lottie';\r\nimport loadingAnimation from '../raw/loading.json'\r\nimport fetchingAnimation from '../raw/fetching.json'\r\nimport {unmountComponentAtNode} from \"react-dom\";\r\nimport React, {useState, useEffect, useCallback} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {loadPosts} from \"../web3js/ContractInterface\";\r\nimport { AnimateOnChange } from 'react-animation'\r\nimport './style/PostLoadingScreen.css'\r\nimport GlobalEventListener from \"../utils/GlobalEventListener\";\r\nimport {UpdatePostIdFetchTag, UpdateStatusPostLoad} from \"../utils/EventTags\";\r\nimport TimeLine from \"./TimeLine\";\r\nimport {MAIN_CONTEXT_ID} from \"./MainScreen\";\r\nimport Intent from \"../utils/Intent\";\r\n\r\n\r\nexport default function PostLoadingScreen(){\r\n\r\n    const [postID, setPostID] = useState(\". . .\")\r\n    const [status, setStatus] = useState(\"Please wait\")\r\n    const [fetchingContainerVisibility, setVisibility] = useState(\"hidden\")\r\n\r\n    const postIdChangeCallback = (data) =>{\r\n        setVisibility(\"visible\")\r\n        setPostID(data.detail);\r\n    }\r\n\r\n    const postLoadStatusChangeCallback = (data) =>{\r\n        setStatus(data.detail)\r\n    }\r\n\r\n    GlobalEventListener(UpdatePostIdFetchTag, postIdChangeCallback)\r\n    GlobalEventListener(UpdateStatusPostLoad, postLoadStatusChangeCallback)\r\n\r\n    const mainLoadingLottieOptions = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: loadingAnimation,\r\n        rendererSettings: {\r\n            preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n    }\r\n\r\n    const fetchingLottieOptions = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: fetchingAnimation,\r\n        rendererSettings: {\r\n            preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id={\"loading-main-container\"}>\r\n            <Lottie\r\n                options={mainLoadingLottieOptions}\r\n                height={57}\r\n                width={57}/>\r\n            <span style={{fontSize:\"large\"}}>{status}</span>\r\n            <div id={\"fetching-container\"} style={{visibility:{fetchingContainerVisibility}}}>\r\n                    <div>\r\n                        <Lottie\r\n                            options={fetchingLottieOptions}\r\n                            height={57}\r\n                            width={57}/>\r\n                        <span id={'fetching-post-id-text'}><strong>Fetching</strong> <AnimateOnChange animationIn={\"popIn\"} animationOut={\"popOut\"} duration={150}>\r\n                             {postID}\r\n                        </AnimateOnChange>\r\n                        </span>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function getPostsFromBlockChain(target){\r\n    unmountComponentAtNode(target);\r\n    ReactDOM.render(\r\n       <PostLoadingScreen/>\r\n        ,target\r\n    );\r\n\r\n    loadPosts().then(\r\n        ()=>{\r\n             Intent(document.getElementById(MAIN_CONTEXT_ID), <TimeLine/>)\r\n        }\r\n    );\r\n\r\n}\r\n","import React, {useState, useEffect, useCallback} from 'react';\r\nimport './style/SplashScreen.css'\r\nimport logo from '../logo.svg'\r\nimport GlobalEventListener from \"../utils/GlobalEventListener\";\r\nimport loadWeb3 from \"../web3js/ContractInterface\";\r\nimport {delay} from \"../utils/Helper\";\r\nimport Intent from \"../utils/Intent\";\r\nimport MainScreen, {MAIN_CONTEXT_ID} from \"./MainScreen\";\r\nimport ShowNotification from \"../utils/ShowNotification\";\r\nimport AlertNotification from \"../artifacts/AlertNotification\";\r\nimport { AnimateOnChange } from 'react-animation'\r\nimport {getPostsFromBlockChain} from \"./PostLoadingScreen\";\r\n\r\nexport default function SplashScreen(props){\r\n\r\n    let [status, setStatus] = useState(\"Loading\")\r\n\r\n    const updateStatus = (data) =>{\r\n        console.log(data);\r\n        setStatus(data.detail);\r\n    }\r\n    GlobalEventListener(props.statusUpdateEvent, updateStatus);\r\n\r\n\r\n    window.addEventListener('load', elementId => {\r\n        loadWeb3()\r\n            .then(async ()=>{\r\n            await delay(3000);\r\n            Intent(document.getElementById('root'), <MainScreen/>)\r\n                .then((success) => {\r\n                    if (success)\r\n                        getPostsFromBlockChain(document.getElementById(MAIN_CONTEXT_ID));\r\n                })\r\n                .catch((e)=>{\r\n                ShowNotification(document.getElementById('notification-panel'),\r\n                    <AlertNotification theme={\"danger\"} message={e}/>);\r\n                console.log(e);\r\n                });\r\n            })\r\n            .catch((e)=>{\r\n            ShowNotification(document.getElementById('notification-panel'),\r\n                <AlertNotification theme={\"danger\"} message={e}/>);\r\n                console.log(e);\r\n            });\r\n    })\r\n\r\n\r\n    return(\r\n        <div className=\"SplashScreen-content\">\r\n        <img id=\"SplashScreen-logo\" src={logo} alt=\"app-logo\"/>\r\n        <br/><br/>\r\n        <div className=\"progress\">\r\n            <div className=\"progress-bar progress-bar-striped progress-bar-animated\"\r\n                 id=\"SplashScreen-progress\"\r\n                 role=\"progressbar\" aria-valuenow=\"75\"\r\n                 aria-valuemin=\"0\" aria-valuemax=\"100\"/>\r\n        </div> <br/>\r\n        <AnimateOnChange animationIn={\"popIn\"} animationOut={\"popOut\"}>\r\n            <span id=\"SplashScreen-status\">{status}</span>\r\n        </AnimateOnChange>\r\n    </div>)\r\n}\r\n","import React from 'react';\nimport './style/index.css';\nimport reportWebVitals from './reportWebVitals';\nimport SplashScreen from \"./screens/SplashScreen\";\nimport {UpdateStatusEventTag} from \"./utils/EventTags\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\nimport Intent from \"./utils/Intent\";\n\nIntent(document.getElementById('root'), <SplashScreen statusUpdateEvent={UpdateStatusEventTag}/>);\nreportWebVitals((i) => {console.log(i)});\n"],"sourceRoot":""}